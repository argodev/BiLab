#!/bin/sh -

# this script will run a search program on a sequence input file or on each
# file in a file of filenames

# to customise this script see the function called run_one_prog below


RCS_HEADER="$Header: /cvsroot/pathsoft/artemis/etc/run_fasta,v 1.8 2004/07/21 15:16:45 tjc Exp $"

PROG=`echo $RCS_HEADER | sed 's/.*run_\(.*\),v.*/\1/'`


if [ $# = 4 -a x$1 = x-onefile ]
then
    shift
    ONEFILE=t
    DATABASE=$3 export DATABASE
else
    if [ $# = 2 ]
    then
        DATABASE=$2 export DATABASE
    else
        echo usage: $0 -onefile input_file output_file database 1>&2
        echo    or: $0 file_of_filenames database 1>&2
        exit 1
    fi
fi


#
# Exchange DB name for fasta reference
#
if [ "$DATABASE" = "%uniprot" ]; then
  DATABASE="%U";
elif [ "$DATABASE" = "%uniprot_archaea" ]; then
  DATABASE="%A";
elif [ "$DATABASE" = "%uniprot_bacteria" ]; then
  DATABASE="%B";
elif [ "$DATABASE" = "%uniprot_eukaryota" ]; then
  DATABASE="%E";
elif [ "$DATABASE" = "%uniprot_viruses" ]; then
  DATABASE="%V";
elif [ "$DATABASE" = "%uniprot_rest" ]; then
  DATABASE="%R";
elif [ "$DATABASE" = "%malaria" ]; then
  DATABASE="%M";
elif [ "$DATABASE" = "%kineto_aa" ]; then
  DATABASE="%K";
fi

# expand any ~ or environment variables
EXPANDED_DATABASE=`echo "echo $DATABASE" | /bin/csh -f`

### change this function to suit your site:

run_one_prog () {
    INPUT_FILE=$1
    OUTPUT_FILE=$2
    DATABASE=$3

### strip out directory from command line

    IN=`echo $INPUT_FILE | sed -n -e "s|$PWD//||p"`
 
    if test "$IN" != "" && test -f $IN; then
      INPUT_FILE="$IN"
    fi
   
    echo "\n\nIN=$IN\nPWD=$PWD\nINPUT_FILE=$INPUT_FILE\n\n"
    ### change these lines:

    ### get sequence size
    seq_size=`infoseq "$INPUT_FILE" -length -only -auto | awk '{ sum += $1 } END { print sum }`

    FASTLIBS=/nfs/disk222/yeastpub/bio-soft/fasta/pubseqgbs export FASTLIBS
    EXEC=/nfs/disk222/yeastpub/bio-soft/fasta/fasta33_t

    echo "about to start $EXEC with input from $INPUT_FILE and output to" 1>&2
    echo "$OUTPUT_FILE using database $DATABASE" 1>&2

    # add/change the flags to suit your site:
    COMMAND="$EXEC -B -S -q -b 100 -H $INPUT_FILE $DATABASE ktup 2"

    echo "command line: $COMMAND" 1>&2

#    lsrun -R 'select[blast && mem > 500] rusage[r1m=1:mem=500]' -v $COMMAND 2>&1 > $OUTPUT_FILE | 

     if [ "$seq_size" -lt 50000 ]
     then
       bsub -q normal -n 1 -R 'select[blast && mem > 500] rusage[r1m=1:mem=500]' -I $COMMAND 2>&1 > $OUTPUT_FILE |
         tee ${PROG}_errors.new 1>&2
     else
       bsub -q "longblastq" -n 1 -R 'select[blast && mem > 500] rusage[r1m=1:mem=500]' -I $COMMAND 2>&1 > $OUTPUT_FILE |
         tee ${PROG}_errors.new 1>&2
     fi

    #### end of changes


    # Artemis can read compressed files
    gzip -9 $OUTPUT_FILE &

    if [ -s ${PROG}_errors.new ]
    then
        ( echo ERROR running $PROG: ; echo; 
          echo ===================================================
          cat ${PROG}_errors.new ) >> $OUTPUT_FILE
        cat ${PROG}_errors.new >> ${PROG}_errors
    fi
}

PERL_PROG='

local *BSUB;

my $file     = $ARGV[0];
my $database = $ARGV[1];
my $pwd      = $ARGV[2];
chomp $file;
chomp $database;

$ENV{'FASTLIBS'} = "/nfs/disk222/yeastpub/bio-soft/fasta/pubseqgbs_test";


open(BSUB, "| bsub -q normal -o fasta_errors -n 1 -R \"select[blast && mem > 500] rusage[r1m=1:mem=500]\" -K") or die "could not open bsub pipe : $!";
open(LIST_FILE,$file);

$EXEC="/nfs/disk222/yeastpub/bio-soft/fasta/fasta33_t";

while(my $inFile = <LIST_FILE>)
{
  chomp($inFile);

  if($inFile =~ m/^($pwd)(.*)/)
  {
    my $inFile_tmp = $2;
    while($inFile_tmp =~ m/^(\/)(.*)/)
    {
      $inFile_tmp = $2;
    }

    if( -e $inFile_tmp )
    {
      $inFile = $inFile_tmp;
    }
  }
  
  print BSUB "$EXEC -B -S -q -b 100 -H $inFile $database ktup 2 > $inFile\.out\n";
  print BSUB "gzip -9 $inFile\.out\n";
}
close BSUB or die "Could not submit job : $!";
close LIST_FILE;

'

(echo "#!/bin/sh -"; echo "kill $$") > $PROG.kill

chmod a+x $PROG.kill

if [ x$ONEFILE = x ]
then
    perl -w -e "$PERL_PROG" "$1" "$EXPANDED_DATABASE" "$PWD"
else
    run_one_prog $1 $2 $EXPANDED_DATABASE
fi

exit 0
