package nsdb.NucFeaturePackage;


/**
* nsdb/NucFeaturePackage/QualifierTypeCodeHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from corba/nsdb.idl
* Monday, August 23, 2004 12:02:40 PM BST
*/


/**
       * Qualifier TypeCode definitions.
       * Each Qualifier type has an assigned typecode. values 1-100
       * are reserved to allow for future extension.
       * <p>
       * this is a stripped down version of the <B>featuremeta</B> IDL. Types which
       * are typedefs of the same base-type in <B>featuremeta</B> are not
       * distinguished here.
       * @see featuremeta
       */
abstract public class QualifierTypeCodeHelper
{
  private static String  _id = "IDL:nsdb/NucFeature/QualifierTypeCode:1.0";

  public static void insert (org.omg.CORBA.Any a, int that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static int extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
      __typeCode = org.omg.CORBA.ORB.init ().create_alias_tc (nsdb.NucFeaturePackage.QualifierTypeCodeHelper.id (), "QualifierTypeCode", __typeCode);
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static int read (org.omg.CORBA.portable.InputStream istream)
  {
    int value = (int)0;
    value = istream.read_long ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, int value)
  {
    ostream.write_long (value);
  }

}
