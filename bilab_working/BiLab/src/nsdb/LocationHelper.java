package nsdb;


/**
* nsdb/LocationHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from corba/nsdb.idl
* Monday, August 23, 2004 12:02:40 PM BST
*/


/**
       * A location is built from one or more nodes forming a tree
       * local node IDs are only unique within a location tree
       * the root node has id == 0
       * the Node id defines the position of the node in the sequence<LocationNode>
       * The value is relative to the current (parent) node
       * e.g if the current node is at position x in the LocationNodes sequence
       *     and there is a childId with value j
       *     then the position of this child in the LocationNodes sequence will be x+j
       */
abstract public class LocationHelper
{
  private static String  _id = "IDL:nsdb/Location:1.0";

  public static void insert (org.omg.CORBA.Any a, nsdb.Location that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static nsdb.Location extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_interface_tc (nsdb.LocationHelper.id (), "Location");
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static nsdb.Location read (org.omg.CORBA.portable.InputStream istream)
  {
    return narrow (istream.read_Object (_LocationStub.class));
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, nsdb.Location value)
  {
    ostream.write_Object ((org.omg.CORBA.Object) value);
  }

  public static nsdb.Location narrow (org.omg.CORBA.Object obj)
  {
    if (obj == null)
      return null;
    else if (obj instanceof nsdb.Location)
      return (nsdb.Location)obj;
    else if (!obj._is_a (id ()))
      throw new org.omg.CORBA.BAD_PARAM ();
    else
    {
      org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl)obj)._get_delegate ();
      nsdb._LocationStub stub = new nsdb._LocationStub ();
      stub._set_delegate(delegate);
      return stub;
    }
  }

}
