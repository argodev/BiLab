// $ANTLR 2.7.3 (20040901-1): Scigol.tree.g -> ScigolTreeParserTokenTypes.txt$
ScigolTreeParser    // output token vocab name
DOT=4
DOTDOT=5
UNARY_MINUS=6
UNARY_PLUS=7
EXPRLIST=8
INITLIST=9
MATRIX=10
LIST=11
MAP=12
FUNC=13
POST_INC=14
POST_DEC=15
APPLICATION=16
LIT_TRUE="true"=17
LIT_FALSE="false"=18
LIT_NULL="null"=19
LIT_FUNC=20
MODIFIERS=21
BUILTIN_TYPE=22
CTOR=23
PROP=24
LCURLY=25
SEMI(";")=26
LITERAL_namespace="namespace"=27
RCURLY("}")=28
IDENT("an identifier")=29
LITERAL_using="using"=30
LITERAL_as="as"=31
LITERAL_from="from"=32
STRING_LITERAL("a string literal")=33
LITERAL_pre="pre"=34
LITERAL_post="post"=35
LITERAL_typeof="typeof"=36
LPAREN=37
RPAREN=38
LITERAL_assert="assert"=39
COMMA=40
LITERAL_debug="debug"=41
LITERAL_logger="logger"=42
ASSIGN=43
LITERAL_or="or"=44
LITERAL_and="and"=45
NOT_EQUAL=46
EQUAL=47
LITERAL_is="is"=48
LITERAL_isnt="isnt"=49
LTHAN=50
GTHAN=51
LTE=52
GTE=53
PLUS=54
MINUS=55
STAR=56
DIV=57
MOD=58
HAT=59
INC=60
DEC=61
LNOT=62
LITERAL_not="not"=63
HASH=64
PRIME=65
BAR=66
SCOPE_ESCAPE=67
LISTSTART("'(")=68
LITERAL_try="try"=69
LITERAL_catch="catch"=70
COLON=71
NUM_INT("a numeric literal")=72
NUM_DINT=73
NUM_REAL=74
NUM_SREAL=75
CHAR_LITERAL("a char literal")=76
LBRACK=77
RBRACK=78
GIVES("->")=79
ANNOT_START=80
LITERAL_let="let"=81
LITERAL_const="const"=82
LITERAL_static="static"=83
LITERAL_final="final"=84
LITERAL_class="class"=85
LITERAL_interface="interface"=86
LITERAL_property="property"=87
LITERAL_override="override"=88
LITERAL_implicit="implicit"=89
LITERAL_public="public"=90
LITERAL_private="private"=91
LITERAL_protected="protected"=92
LITERAL_func="func"=93
LITERAL_vector="vector"=94
LITERAL_matrix="matrix"=95
LITERAL_range="range"=96
LITERAL_list="list"=97
LITERAL_map="map"=98
LITERAL_bool="bool"=99
LITERAL_byte="byte"=100
LITERAL_char="char"=101
LITERAL_int="int"=102
LITERAL_dint="dint"=103
LITERAL_real="real"=104
LITERAL_sreal="sreal"=105
LITERAL_string="string"=106
LITERAL_type="type"=107
LITERAL_num="num"=108
LITERAL_any="any"=109
LITERAL_object="object"=110
LITERAL_if="if"=111
LITERAL_then="then"=112
LITERAL_else="else"=113
LITERAL_do="do"=114
LITERAL_while="while"=115
LITERAL_for="for"=116
LITERAL_foreach="foreach"=117
LITERAL_in="in"=118
LITERAL_by="by"=119
LITERAL_throw="throw"=120
QUESTION=121
SL=122
BAND=123
FROM=124
LINE_BREAK=125
NON_LINE_BREAK_WS=126
WS=127
SL_COMMENT=128
ML_COMMENT=129
STRING_OR_CHAR_LITERAL=130
SINGLE_LINE_STRING_LITERAL("a string literal")=131
MULTI_LINE_STRING_LITERAL("a multi-line string literal")=132
NON_BACKQUOTE_STRING=133
CHAR_LIT_SUFFIX=134
ESC=135
HEX_DIGIT=136
VOCAB=137
DOT_FLOAT_EXP=138
EXPONENT=139
REAL_SUFFIX=140
