/**
 * This document is a part of the source code and related artifacts for BiLab,
 * an open source interactive workbench for computational biologists.
 * 
 * http://computing.ornl.gov/
 * 
 * Copyright Â© 2011 Oak Ridge National Laboratory
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package type;

/**
 * type/InvalidArgumentValueHolder.java . Generated by the IDL-to-Java compiler
 * (portable), version "3.1" from corba/types.idl Monday, August 23, 2004
 * 12:02:36 PM BST
 */

/**
 * controlled values (i.e. an attribute can only contain a value taken from a
 * well defined range of values, or an in parameter to a method has a restricted
 * set of acceptable values) are presented as typescodes, used in as union. If a
 * method tries to set a controlled value attribute/parameter to an invalid
 * value, an invalidValue is raised
 */
public final class InvalidArgumentValueHolder implements
        org.omg.CORBA.portable.Streamable {
    public type.InvalidArgumentValue value = null;

    public InvalidArgumentValueHolder() {
    }

    public InvalidArgumentValueHolder(
            final type.InvalidArgumentValue initialValue) {
        value = initialValue;
    }

    @Override
    public void _read(final org.omg.CORBA.portable.InputStream i) {
        value = type.InvalidArgumentValueHelper.read(i);
    }

    @Override
    public org.omg.CORBA.TypeCode _type() {
        return type.InvalidArgumentValueHelper.type();
    }

    @Override
    public void _write(final org.omg.CORBA.portable.OutputStream o) {
        type.InvalidArgumentValueHelper.write(o, value);
    }

}
